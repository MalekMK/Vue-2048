{"remainingRequest":"/home/mk/Desktop/2048/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mk/Desktop/2048/src/components/dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mk/Desktop/2048/src/components/dashboard.vue","mtime":1567164461732},{"path":"/home/mk/Desktop/2048/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mk/Desktop/2048/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mk/Desktop/2048/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mk/Desktop/2048/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { numberTypeAnnotation } from \"babel-types\";\nexport default {\n  name: \"dashboard\",\n  // props:{\n  //   gridLengthh :{\n  //     type:Number\n  //   }\n  //   },\n  props: [\"gridLength\"],\n  watch: {\n    gridLength() {\n      this.changeDisplay();\n    }\n  },\n  data() {\n    return {\n      players: [],\n      displayPlayers: []\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    changeDisplay() {\n      this.displayPlayers = [];\n      for (let i = 0; i < this.players.length; i++) {\n        if (this.players[i].gridSize === this.gridLength) {\n          this.displayPlayers.push(this.players[i]);\n        }\n      }\n    },\n    load() {\n      fetch(\"http://localhost:3000/\")\n        .then(response => {\n          return response.json();\n        })\n        .then(json => {\n          this.players = json;\n          this.changeDisplay();\n        })\n        .catch(error => console.error(error));\n    },\n    sortedPlayers(players) {\n      return players.concat().sort((a, b) => {\n        return a.score > b.score ? -1 : 1;\n      });\n    },\n    controlLength(displayPlayers){\n      let tempTab=this.sortedPlayers(displayPlayers)\n      while(tempTab.length>10){\n        tempTab.pop()\n      }\n      return tempTab\n    }\n  }\n};\n",{"version":3,"sources":["dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Top 10</th>\n            <th>Player Name</th>\n            <th>Score</th>\n            <!-- <th>gridLength</th> -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(player,index) in controlLength(displayPlayers)\" v-bind:key=\"player.id\">\n            <td>{{index+1}}</td>\n            <td>{{player.name}}</td>\n            <td>{{player.score}}</td>\n            <!-- <td>{{player.gridSize}}</td> -->\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { numberTypeAnnotation } from \"babel-types\";\nexport default {\n  name: \"dashboard\",\n  // props:{\n  //   gridLengthh :{\n  //     type:Number\n  //   }\n  //   },\n  props: [\"gridLength\"],\n  watch: {\n    gridLength() {\n      this.changeDisplay();\n    }\n  },\n  data() {\n    return {\n      players: [],\n      displayPlayers: []\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    changeDisplay() {\n      this.displayPlayers = [];\n      for (let i = 0; i < this.players.length; i++) {\n        if (this.players[i].gridSize === this.gridLength) {\n          this.displayPlayers.push(this.players[i]);\n        }\n      }\n    },\n    load() {\n      fetch(\"http://localhost:3000/\")\n        .then(response => {\n          return response.json();\n        })\n        .then(json => {\n          this.players = json;\n          this.changeDisplay();\n        })\n        .catch(error => console.error(error));\n    },\n    sortedPlayers(players) {\n      return players.concat().sort((a, b) => {\n        return a.score > b.score ? -1 : 1;\n      });\n    },\n    controlLength(displayPlayers){\n      let tempTab=this.sortedPlayers(displayPlayers)\n      while(tempTab.length>10){\n        tempTab.pop()\n      }\n      return tempTab\n    }\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  border: 2px solid #42b983;\n  border-radius: 3px;\n  background-color: #fff;\n}\n\nth {\n  background-color: #42b983;\n  color: rgba(255, 255, 255, 0.66);\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\ntd {\n  background-color: #f9f9f9;\n}\n\nth,\ntd {\n  text-align: center;\n  min-width: 50px;\n  padding: 10px 20px;\n}\n\nth.active {\n  color: #fff;\n}\n\nth.active .arrow {\n  opacity: 1;\n}\n</style>"]}]}